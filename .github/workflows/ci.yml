name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Check code formatting (optional)
      run: echo "Code formatting check passed"

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - run: npm ci
      - run: docker build -t kirupasahar/the-docker-hub:check-1 .
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - run: docker push kirupasahar/the-docker-hub:check-1
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_IP }}
          username: linux
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull kirupasahar/the-docker-hub:check-1
#             docker stop devops-cicd-app || true
#             docker rm devops-cicd-app || true
#             docker run -d -p 80:3000 --name devops-cicd-app kirupasahar/the-docker-hub:check  
# # name: CI/CD Pipeline

# on:
#   push:
#     branches: [ main, develop ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   test:
#     runs-on: ubuntu-latest
    
#     strategy:
#       matrix:
#         node-version: [18.x, 20.x]
    
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4
    
#     - name: Setup Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v4
#       with:
#         node-version: ${{ matrix.node-version }}
#         cache: 'npm'
    
#     - name: Install dependencies
#       run: npm ci
    
#     - name: Run tests
#       run: npm test
    
#     - name: Check code formatting (optional)
#       run: echo "Code formatting check passed"

#   build:
#     needs: test
#     runs-on: ubuntu-latest
    
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4
    
#     - name: Setup Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: '18.x'
#         cache: 'npm'
    
#     - name: Install dependencies
#       run: npm ci
    
#     - name: Build application
#       run: |
#         echo "Building application..."
#         npm install --production
    
#     - name: Build Docker image
#       run: |
#         docker build -t devops-cicd-app:${{ github.sha }} .
#         docker tag devops-cicd-app:${{ github.sha }} devops-cicd-app:latest
    
#     - name: Test Docker image
#       run: |
#         docker run -d -p 3000:3000 --name test-container devops-cicd-app:latest
#         sleep 5
#         curl -f http://localhost:3000/health || exit 1
#         docker stop test-container
#         docker rm test-container
    
#     - name: Log build success
#       run: |
#         echo "âœ… Build completed successfully!"
#         echo "ðŸ“¦ Docker image: devops-cicd-app:${{ github.sha }}"