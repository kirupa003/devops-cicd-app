name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Check code formatting (optional)
      run: echo "Code formatting check passed"

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: |
        echo "Building application..."
        npm install --production
    
    - name: Build Docker image
      run: |
        docker build -t devops-cicd-app:${{ github.sha }} .
        docker tag devops-cicd-app:${{ github.sha }} devops-cicd-app:latest
    
    - name: Test Docker image
      run: |
        docker run -d -p 3000:3000 --name test-container devops-cicd-app:latest
        sleep 5
        curl -f http://localhost:3000/health || exit 1
        docker stop test-container
        docker rm test-container
    
    - name: Log build success
      run: |
        echo "âœ… Build completed successfully!"
        echo "ðŸ“¦ Docker image: devops-cicd-app:${{ github.sha }}"